graphql:
  graphiql: false

elasticsearch:
  socket-timeout: 250
  connect-timeout: 1000

keycloak:
  token-uri: /protocol/openid-connect/token

cache:
  type: cache2k
  names: admin-categories
  ttl: 60 # in seconds
  max-entries: 200

kafka:
  auto-create-topics: false
  pool-timeout: 1_000
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
  consumer:
    categories:
      auto-offset-reset: earliest
      concurrency: 1
      id: kafka-listener-categories
      topics: adm_videos_mysql.adm_videos.categories
      group-id: catalogo-service
      max-attempts: 4

server:
  port: 8080
  servlet:
    context-path: /api
  compression:
    enabled: true # Whether response compression is enabled.
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json # Comma-separated list of MIME types that should be compressed.
    min-response-size: 1024 # Minimum "Content-Length" value that is required for compression to be performed.
  undertow:
    threads:
      worker: 64 # Generally this should be reasonably high, at least 10 per CPU core: https://undertow.io/undertow-docs/undertow-docs-2.1.0/index.html#listeners-2
      io: 4 # One IO thread per CPU core is a reasonable default: https://undertow.io/undertow-docs/undertow-docs-2.1.0/index.html#listeners-2

logging:
  level:
    org:
      springframework:
        security: DEBUG
    root: info
    com.tresende.catalog: DEBUG


spring:
  cache:
    type: ${cache.type}
    cache-names: ${cache.names}
  elasticsearch:
    uris: ${elasticsearch.uris}
    username: ${elasticsearch.username}
    password: ${elasticsearch.password}
    connection-timeout: ${elasticsearch.connect-timeout}
    read-timeout: ${elasticsearch.socket-timeout}
  graphql:
    graphiql:
      enabled: ${graphql.graphiql}
  servlet:
    multipart:
      max-file-size: 10GB
      max-request-size: 100GB
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak.host}/realms/${keycloak.realm}/protocol/openid-connect/certs
          issuer-uri: ${keycloak.host}/realms/${keycloak.realm}

rest-client:
  categories:
    base-url: "${rest-client.base-url}/api/categories"
    read-timeout: 1_000
  keycloak:
    base-url: "${keycloak.host}/realms/${keycloak.realm}"
    read-timeout: 1_000


resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
        sliding-window-size: 100
        minimum-number-of-calls: 20
        permitted-number-of-calls-in-half-open-state: 10
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 50
        slow-call-rate-threshold: 70
        slow-call-duration-threshold: 2s
        event-consumer-buffer-size: 10
        record-exceptions:
          - com.tresende.catalog.domain.exceptions.InternalErrorException
          - org.springframework.web.client.ResourceAccessException
          - org.springframework.web.client.HttpServerErrorException.InternalServerError
          - org.springframework.web.client.HttpServerErrorException.GatewayTimeout
          - org.springframework.web.client.HttpServerErrorException.ServiceUnavailable
          - java.net.SocketTimeoutException
          - java.net.http.HttpConnectTimeoutException
          - java.net.http.HttpTimeoutException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 100ms
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - com.tresende.catalog.domain.exceptions.InternalErrorException
          - org.springframework.web.client.ResourceAccessException
          - org.springframework.web.client.HttpServerErrorException.InternalServerError
          - org.springframework.web.client.HttpServerErrorException.GatewayTimeout
          - org.springframework.web.client.HttpServerErrorException.ServiceUnavailable
          - java.net.SocketTimeoutException
          - java.net.http.HttpConnectTimeoutException
          - java.net.http.HttpTimeoutException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
    instances:
      categories:
        base-config: default
  bulkhead:
    configs:
      default:
        max-concurrent-calls: 25
        max-wait-duration: 100
    instances:
      categories:
        base-config: default
