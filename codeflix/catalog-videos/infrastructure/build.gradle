plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id "org.springframework.boot" version "3.3.4"
    id "io.spring.dependency-management" version "1.1.6"
}

group = 'com.tresende.catalog.infrastructure'

bootJar {
    setArchiveBaseName('application')
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

dependencies {
    // Project
    implementation(project(":domain"))
    implementation(project(":application"))

    // Spring Boot
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-graphql')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-resource-server')
    implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch')

    // Utility
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation('com.fasterxml.jackson.module:jackson-module-afterburner')
    implementation("com.google.guava:guava:31.1-jre")


    // Test
    testImplementation('org.testcontainers:testcontainers:1.20.2')
    testImplementation('org.testcontainers:elasticsearch:1.20.2')
    testImplementation('org.testcontainers:junit-jupiter:1.20.2')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation(project(path: ':domain', configuration: 'testClasses'))
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation('org.springframework.graphql:spring-graphql-test')
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}