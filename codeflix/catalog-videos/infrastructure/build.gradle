plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id "org.springframework.boot" version "3.5.3"
    id "io.spring.dependency-management" version "1.1.7"
}

group = 'com.tresende.catalog.infrastructure'

bootJar {
    setArchiveBaseName('application')
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

ext {
    cache2k = "2.6.1.Final"
}

dependencies {
    // Project
    implementation(project(":domain"))
    implementation(project(":application"))

    // Spring Boot
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-graphql')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-cache')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-resource-server')
    implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch')
    implementation("io.github.resilience4j:resilience4j-spring-boot3")
    implementation("io.github.resilience4j:resilience4j-retry")
    implementation("io.github.resilience4j:resilience4j-bulkhead")
    implementation("io.github.resilience4j:resilience4j-circuitbreaker")


    implementation("org.cache2k:cache2k-core:$cache2k")
    runtimeOnly("org.cache2k:cache2k-api:$cache2k")
    implementation("org.cache2k:cache2k-spring:$cache2k")

    // Utility
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation("org.springframework.kafka:spring-kafka:3.3.6")
    testImplementation("org.springframework.kafka:spring-kafka-test:3.3.6")
    implementation('com.fasterxml.jackson.module:jackson-module-afterburner')
    implementation("org.springframework.cloud:spring-cloud-contract-wiremock")
    implementation('com.google.guava:guava:32.0.1-android')


    // Test
    testImplementation('org.testcontainers:testcontainers:1.20.2')
    testImplementation('org.testcontainers:kafka:1.20.2')
    testImplementation('org.testcontainers:elasticsearch:1.20.2')
    testImplementation('org.testcontainers:junit-jupiter:1.20.2')
    testImplementation("org.springframework.boot:spring-boot-testcontainers")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation(project(path: ':domain', configuration: 'testClasses'))
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation('org.springframework.graphql:spring-graphql-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
        mavenBom "io.github.resilience4j:resilience4j-bom:2.3.0"
    }
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}